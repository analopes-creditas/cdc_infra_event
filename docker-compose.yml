version: '3.9'

services:

  zookeeper:
    container_name: zookeeper
    image: debezium/zookeeper:1.9
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    expose:
      - 2181
    networks:
      - default

  kafka:
    container_name: kafka
    image: debezium/kafka:1.9
    ports:
      - 9092:9092
      - 29092:29092
    expose:
      - 9092
    environment:
      ZOOKEEPER_CONNECT: zookeeper:2181
      BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - default

  postgres:
    container_name: postgres
    image: debezium/postgres:12
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready -U start_data_engineer -d datahub"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      POSTGRES_USER: start_data_engineer
      POSTGRES_PASSWORD: pgpwd
      POSTGRES_DB: datahub
    volumes:
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - default

  connect:
    container_name: connect
    image: debezium/connect:1.9
    ports:
      - 8083:8083
    expose:
      - 8083
    environment:
      GROUP_ID: 1
      BOOTSTRAP_SERVERS: kafka:9092
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      REST_HOST_NAME: 0.0.0.0
    depends_on:
      - zookeeper
      - kafka
      - postgres
    networks:
      - default

networks:
  default:
    driver: bridge
